@import "./config";

@mixin media-xs {
  @media (max-width: map-get($breakpoints, sm) - 1) {
    @content;
  }
}

@mixin media-sm {
  @media (min-width: map-get($breakpoints, sm)) {
    @content;
  }
}

@mixin media-md {
  @media (min-width: map-get($breakpoints, md)) {
    @content;
  }
}

@mixin media-lg {
  @media (min-width: map-get($breakpoints, lg)) {
    @content;
  }
}

@mixin media-xl {
  @media (min-width: map-get($breakpoints, xl)) {
    @content;
  }
}

/* only */

@mixin media-only-sm {
  @media (min-width: map-get($breakpoints, sm)) and (max-width: map-get($breakpoints, md) - 1) {
    @content;
  }
}

@mixin media-only-md {
  @media (min-width: map-get($breakpoints, md)) and (max-width: map-get($breakpoints, lg) - 1) {
    @content;
  }
}

@mixin media-only-lg {
  @media (min-width: map-get($breakpoints, lg)) and (max-width: map-get($breakpoints, xl) - 1) {
    @content;
  }
}

@mixin mq-only($small, $big) {
  @if map-has-key($breakpoints, $small) and map-has-key($breakpoints, $big) {
    @media (min-width: inspect(map-get($breakpoints, $small))) and (max-width: inspect(map-get($breakpoints, $big))) {
      @content;
    }
  }
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. " + "Please make sure it is defined in `$breakpoints` map.";
  }
}

@mixin mq($name) {
  @if map-has-key($breakpoints, $name) {
    @media (min-width: inspect(map-get($breakpoints, $name))) {
      @content;
    }
  }
  @else {
    @media #{$name} {
      @content;
    }
  }
}
